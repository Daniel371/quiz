{"version":3,"sources":["quiz/ScoreBoard.js","quiz/Question.js","quiz/Quiz.js","App.js","index.js"],"names":["ScoreBoard","props","Card","CardContent","Typography","styles","minWidth","variant","align","score","Question","useState","selectedIndex","setSelectedIndex","selected","setSelected","useEffect","style","marginTop","Grid","container","direction","justify","spacing","item","question","List","component","maxWidth","margin","answers","map","answer","i","ListItem","divider","button","onClick","event","ListItemText","primaryTypographyProps","primary","Button","fullWidth","confirmAnswer","alert","color","size","Quiz","questions","setQuestions","current","setCurrent","setScore","open","setOpen","axios","get","then","response","data","answerIndex","correctIndex","oldScore","length","prev","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","padding","theme","createMuiTheme","palette","type","App","ThemeProvider","CssBaseline","className","Container","alignItems","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc22eacf.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, CardContent, Typography } from '@material-ui/core'\r\n\r\nconst ScoreBoard = props => {\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography styles={{ minWidth: 200 }} variant='h2' align='center'>\r\n\t\t\t\t\t{props.score}\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default ScoreBoard\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n\tButton,\r\n\tCard,\r\n\tCardContent,\r\n\tGrid,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tTypography,\r\n} from '@material-ui/core'\r\n\r\nconst Question = props => {\r\n\tconst [selectedIndex, setSelectedIndex] = useState(null)\r\n\tconst [selected, setSelected] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedIndex(null)\r\n\t}, [props])\r\n\r\n\t// capturing selected answer and notifing the app that answer is selected\r\n\tconst handleListItemClick = (event, index) => {\r\n\t\tsetSelectedIndex(index)\r\n\t\tsetSelected(true)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card style={{ marginTop: 36 }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Grid container direction='column' justify='center' spacing={5}>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Typography variant='h5' align='center'>\r\n\t\t\t\t\t\t\t\t{props.question}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\t\tcomponent='nav'\r\n\t\t\t\t\t\t\t\tstyle={{ maxWidth: 500, margin: '0 auto', marginTop: 24 }}>\r\n\t\t\t\t\t\t\t\t{props.answers &&\r\n\t\t\t\t\t\t\t\t\tprops.answers.map((answer, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tdivider\r\n\t\t\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\t\t\tselected={selectedIndex === i}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={event => handleListItemClick(event, i)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\t\tprimaryTypographyProps={{ variant: 'h6' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tprimary={answer}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\tselected\r\n\t\t\t\t\t\t\t\t\t\t? props.confirmAnswer(selectedIndex)\r\n\t\t\t\t\t\t\t\t\t\t: alert('Please select an answer first!')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\tsize='large'>\r\n\t\t\t\t\t\t\t\tCONFIRM\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Question\r\n","import React, { useEffect, useState } from 'react'\r\nimport ScoreBoard from './ScoreBoard'\r\nimport Question from './Question'\r\nimport axios from 'axios'\r\nimport {\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tTypography,\r\n} from '@material-ui/core'\r\n\r\nconst Quiz = () => {\r\n\tconst [questions, setQuestions] = useState(null)\r\n\tconst [current, setCurrent] = useState(0)\r\n\tconst [score, setScore] = useState(0)\r\n\tconst [open, setOpen] = useState(false)\r\n\r\n\t// Getting data first time components mounts\r\n\tuseEffect(() => {\r\n\t\taxios.get('quiz.json').then(response => {\r\n\t\t\tsetQuestions(response.data.questions)\r\n\t\t})\r\n\t}, [])\r\n\r\n\t// Comparing answer selected with correct answer index in the questions data\r\n\tconst confirmAnswerHandler = answerIndex => {\r\n\t\tif (questions[current].correctIndex === answerIndex) {\r\n\t\t\tsetScore(oldScore => oldScore + 1)\r\n\t\t}\r\n\r\n\t\t// Checking if this is the last question\r\n\t\tif (current < questions.length - 1) {\r\n\t\t\tsetCurrent(prev => prev + 1)\r\n\t\t} else {\r\n\t\t\tsetOpen(true)\r\n\t\t}\r\n\t}\r\n\r\n\t// closing dialog and reseting the quiz\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false)\r\n\t\tsetCurrent(0)\r\n\t\tsetScore(0)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ScoreBoard score={score} />\r\n\t\t\t<Question\r\n\t\t\t\tconfirmAnswer={confirmAnswerHandler}\r\n\t\t\t\tquestion={questions && questions[current].question}\r\n\t\t\t\tanswers={questions && questions[current].answers}\r\n\t\t\t/>\r\n\t\t\t<Dialog\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\taria-labelledby='simple-dialog-title'\r\n\t\t\t\topen={open}>\r\n\t\t\t\t<DialogTitle id='simple-dialog-title'>Result</DialogTitle>\r\n\t\t\t\t<DialogContent style={{ padding: 32 }}>\r\n\t\t\t\t\t<Typography variant='h3'>{`Your score: ${score}`}</Typography>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t</Dialog>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Quiz\r\n","import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Quiz from './quiz/Quiz'\nimport { Container, Grid } from '@material-ui/core'\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\ttype: 'dark',\n\t},\n})\n\nconst App = () => {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<div className='App'>\n\t\t\t\t<Container maxWidth='md'>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tjustify='center'\n\t\t\t\t\t\talignItems='center'\n\t\t\t\t\t\tstyle={{ height: '100vh' }}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Quiz />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}